<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<!-- defaultModelType:
			1.conditional:类似hierarchical;
			2.flat:所有内容(主键,blob)等全部生成在一个对象中;
        	3.hierarchical:主键生成一个XXKey对象(key class),Blob等单独生成一个对象,其他简单属性在一个对象中(record class);
		targetRuntime:
        	1.MyBatis3:默认的值,生成基于MyBatis3.x以上版本的内容,包括XXXBySample;
        	2.MyBatis3Simple:类似MyBatis3,只是不生成XXXBySample;
    	introspectedColumnImpl:类全限定名,用于扩展MBG-->
    <context id="MyBatisTables" targetRuntime="MyBatis3" defaultModelType="flat">
	    <!-- 生成的Java文件的编码 -->
	    <property name="javaFileEncoding" value="UTF-8"/>
	    <!-- 格式化java代码 -->
	    <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
	    <!-- 格式化XML代码 -->
	    <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
	    <!-- 分页相关 -->
        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin" />
        <!-- 序列化接口 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <!-- 精简代码-->
	    <plugin type="com.cloud.config.generator.MybatisPluginAdapter" >
            <property name="hasLombok" value="true"/>
        </plugin>
        <commentGenerator type="com.cloud.config.generator.MybatisCommentGenerator">
        	<!-- 去掉生成日期注释
            <property name="suppressDate" value="true"/> -->
            <!-- 去除自动生成的注释 true:是 : false:否
            <property name="suppressAllComments" value="true"/> -->
        </commentGenerator>
        <!--数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost/cloud" userId="root" password="123456">
        </jdbcConnection>
        <!-- java类型处理器 -->
        <javaTypeResolver>
        	<!-- true:使用BigDecimal对应DECIMAL和 NUMERIC数据类型,false:默认.
	    	scale>0;length>18:使用BigDecimal;
	    	scale=0;length[10,18]:使用Long;
	    	scale=0;length[5,9]:使用Integer;
	    	scale=0;length<5:使用Short;-->
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>
        <!-- java模型创建器 -->
        <javaModelGenerator targetPackage="com.cloud.model.role" targetProject="dashboard/src/main/java/">
        	<!-- model添加构造函数 -->    
            <property name="constructorBased" value="false"/>
        	<!-- 在targetPackage的基础上,根据数据库的schema再生成一层package,最终生成的类放在这个package下,默认为false -->
            <property name="enableSubPackages" value="true"/>
        	<!-- 设置是否在getter方法中,对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成SQL map的XML文件生成器 -->
        <sqlMapGenerator targetPackage="mapper.role" targetProject="dashboard/src/main/resources">
        	<!-- 在targetPackage的基础上,根据数据库的schema再生成一层package,最终生成的类放在这个package下,默认为false -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 对于mybatis来说,即生成Mapper接口,注意,如果没有配置该元素,那么默认不会生成Mapper接口targetPackage/targetProject:同javaModelGenerator
        type:选择怎么生成mapper接口(在MyBatis3/MyBatis3Simple下):
            1。ANNOTATEDMAPPER:会生成使用Mapper接口+Annotation的方式创建(SQL生成在annotation中),不会生成对应的XML;
            2。MIXEDMAPPER:使用混合配置,会生成Mapper接口,并适当添加合适的Annotation,但是XML会生成在XML中;
            3。XMLMAPPER:会生成Mapper接口,接口完全依赖XML;
       	 注意,如果context是MyBatis3Simple:只支持ANNOTATEDMAPPER和XMLMAPPER-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.cloud.dao.role" targetProject="dashboard/src/main/java/">
        	<!-- 在targetPackage的基础上,根据数据库的schema再生成一层package,最终生成的类放在这个package下,默认为false -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        
        <!-- table生成相关文件
			enableInsert(默认true):指定是否生成insert语句;
			enableSelectByPrimaryKey(默认true):指定是否生成按照主键查询对象的语句(就是getById或get);
			enableUpdateByPrimaryKey(默认true):指定是否生成按照主键修改对象的语句(即update);
			enableDeleteByPrimaryKey(默认true):指定是否生成按照主键删除对象的语句(即delete);
			
			enableSelectByExample(默认true):MyBatis3Simple为false,指定是否生成动态查询语句;
			enableCountByExample(默认true):MyBatis3Simple为false,指定是否生成动态查询总条数语句(用于分页的总条数查询);
			enableUpdateByExample(默认true):MyBatis3Simple为false,指定是否生成动态修改语句(只修改对象中不为空的属性);
			enableDeleteByExample(默认true):MyBatis3Simple为false,指定是否生成动态删除语句;-->
        <table tableName="t_roles" domainObjectName="Role" enableSelectByExample="false" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
        selectByExampleQueryId="true">
	        <!-- 设置忽略的列
	        	<ignoreColumn column="password" />-->
        </table>
    </context>
</generatorConfiguration>